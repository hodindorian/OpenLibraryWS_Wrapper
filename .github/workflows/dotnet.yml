name: .NET Core Desktop

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]


jobs:
  build-and-sonar:
    runs-on: ubuntu-latest

    env:
      Solution_Name: ./Sources/OpenLibraryWS_Wrapper.sln
      Test_Project_Path: ./Sources/Tests
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 7.0.x
          
      - name: Install SonarScanner
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Run SonarQube Scanner
        run: dotnet sonarscanner begin /k:Dotnet_Dorian_HODIN /d:sonar.host.url="https://codefirst.iut.uca.fr/sonar/" /d:sonar.coverageReportPaths="coveragereport/SonarQube.xml" /d:sonar.coverage.exclusions="Tests/**" /d:sonar.login="$SONAR_TOKEN"
        env:
          SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}

      - name: Execute unit tests
        run:
          dotnet test ./Sources/OpenLibraryWS_Wrapper.sln

      - name: Restore the application
        run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration
        env:
          Configuration: ${{ matrix.configuration }}
        

      - name: End SonarQube Analysis
        run: dotnet sonarscanner end /d:sonar.login="$SONAR_TOKEN"
        env:
          SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}

    



